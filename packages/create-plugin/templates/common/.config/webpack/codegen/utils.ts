import fs from 'fs';
import { execFile as nodeExecFile } from 'node:child_process';
import path from 'node:path';
import { promisify } from 'node:util';
import { CODEGEN_DIR, CONFIG_DIR, SOURCE_DIR } from '../constants';

const execFile = promisify(nodeExecFile);

export async function prettifyFile(fileName: string) {
  try {
    const filePath = path.join(process.cwd(), SOURCE_DIR, CODEGEN_DIR, fileName);
    if (!fs.existsSync(filePath)) {
      return;
    }

    const command = 'npx';
    const args = ['prettier', '--write', filePath];
    await execFile(command, args);
  } catch (error) {
    console.error('Failed to prettify generated file:', error);
  }
}

export const FILE_HEADER_COMMENT = `// DO NOT EDIT THIS FILE. IT IS AUTOMATICALLY GENERATED FROM PLUGIN.JSON`;

export const colors = {
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  reset: '\x1b[0m',
};

export function logInfo(message: string, args: string) {
  console.log(`codegen --> ${message}${colors.green} ${args}${colors.reset}`);
  console.log('');
}

export function logWarning(message: string) {
  console.log(`codegen --> ${colors.yellow}${message}${colors.reset}`);
  console.log('');
}

export function logError(message: string) {
  console.log(`codegen --> ${colors.red}${message}${colors.reset}`);
  console.log('');
}

export function getCodegenDirPath() {
  return path.join(process.cwd(), SOURCE_DIR, CODEGEN_DIR);
}
